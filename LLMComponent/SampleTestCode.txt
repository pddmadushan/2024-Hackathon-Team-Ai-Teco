###Prompt: Create a Sales Order
namespace TestsInternal.Tests { // Create the class and Check public class SalesOrderTC : Check { // Create an instance of the OrderSoQP OrderSoQP SalesOrder = new OrderSoQP(); public override void Execute() { // Log in to the destination site PxLogin.LoginToDestinationSite(); #region Testcase1: Create a Sales Order using (TestExecution.CreateTestCaseGroup("Testcase1: Create a Sales Order")) { #region Teststep2: Add a sales order using (TestExecution.CreateTestStepGroup("Teststep2: Add a sales order")) { // Open the Sales Order screen and perform actions SalesOrder.OpenScreen(); SalesOrder.Insert(); SalesOrder.Summary.CustomerID.Select(""); // Add appropriate customer ID SalesOrder.Summary.OrderDesc.Type(""); // Provide the order description SalesOrder.Save(); // Save the order } #endregion } #endregion } } }###

### Prompt: Create a purchase order from sales order screen. 
namespace TestsInternal.Tests { // Define the test case [TestDescription("PurchaseOrderTC")] public class PurchaseTC : Check { // Create instances of required classes CreatePurchaseOrders CreatePurchaseOrders = new CreatePurchaseOrders(); OrderPo OrderPo = new OrderPo(); public override void Execute() { // Log in to the destination site PxLogin.LoginToDestinationSite(); #region Testcase1: Create a Purchase Order using (TestExecution.CreateTestCaseGroup("Testcase1: Create a purchase order")) { #region Teststep1: Create a Purchase Order using (TestExecution.CreateTestStepGroup("Teststep1: Create a purchase order")) { // Navigate to the appropriate row and perform actions CreatePurchaseOrders.Details.SelectRow(CreatePurchaseOrders.Details.Columns.InventoryID, "DRAGONFR"); CreatePurchaseOrders.Details.Row.VendorID.Select("ALLFRUITS"); // Select Vendor ID CreatePurchaseOrders.Details.Row.POSiteID.Select("RETAIL"); // Select the PO Site CreatePurchaseOrders.Process(); // Process the Purchase Order // Verify details and complete the order OrderPo.DocumentDetails.SelectRow(OrderPo.DocumentDetails.Columns.InventoryID, "DRAGONFR"); OrderPo.DocumentDetails.Row.CuryUnitCost.GetValue().VerifyEquals(2.75m); // Verify the unit cost OrderPo.Summary.OrderDesc.Type("Sample PO"); // Type the order description OrderPo.ReleaseFromHold(); // Release the order from hold OrderPo.Save(); // Save the order // Retrieve the Purchase Order number PONbr = OrderPo.Summary.OrderNbr.GetValue(); } #endregion } #endregion } } }###


### Prompt: Create a journal entry test scenario `` namespace TestsInternal.Tests { //Define the test case [TestDescription("JournalEntryTC")] public class JournalEntryTC: Check { JournalEntry JournalEntry= new JournalEntry(); public override void Execute() { PxLogin.LoginToDestinationSite(); #region Testcase1 : Create a Journal Entry using (TestExecution.CreateTestCaseGroup("Testcase1 : Create a journal entry")) { #region Teststep1:Create a Journal Entry using (TestExecution.CreateTestStepGroup("Teststep1:Create a journal entry")) { JournalEntry.OpenScreen(); JournalEntry.Insert(); JournalEntry.Details.Upload();//Open the upload dialog JournalEntry.Details.UploadForm.SelectFile(Support.GetContentFilePath(""));//Upload a file JournalEntry.Details.UploadForm.Upload(); JournalEntry.ImportColumns.Ok(); JournalEntry.Release(); } #endregion } #endregion } } }### ``
